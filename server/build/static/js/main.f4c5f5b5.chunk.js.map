{"version":3,"sources":["services/todos.js","components/Todo.js","App.js","index.js"],"names":["baseUrl","exports","getAll","axios","get","then","response","data","create","newObject","post","change","todo","console","log","put","id","res","remove","delete","Todo","removeTodo","toggleChange","type","checked","completed","onChange","content","onClick","App","useState","todos","setTodos","newTodo","setNewTodo","useEffect","todoService","initialTodos","window","confirm","filter","t","catch","error","alert","toggleCompletion","changedTodo","map","onSubmit","e","preventDefault","todoObject","returnedTodo","concat","value","target","ReactDOM","render","document","getElementById"],"mappings":"6MACMA,EAAU,aA8BDC,EAFC,CAACC,OA1BF,WAEb,OADYC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAwBdC,OArBV,SAAAC,GAEb,OADYN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmBNI,OAhBlB,SAACC,GAEd,OADAC,QAAQC,IAAI,yBACLX,IAAMY,IAAN,UAAaf,EAAb,YAAwBY,EAAKI,IAAKJ,GAC5BP,MAAK,SAAAY,GAGJ,OAFAJ,QAAQC,IAAI,2BAELG,EAAIV,SAUcW,OAP1B,SAACN,GACd,OAAOT,IAAMgB,OAAN,UAAgBnB,EAAhB,YAA2BY,EAAKI,IAAMJ,GAChCP,MAAK,SAAAY,GACJJ,QAAQC,IAAIG,Q,OCPbG,EAhBF,SAAC,GAAqC,IAApCR,EAAmC,EAAnCA,KAAKS,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAC9B,OACE,+BACA,6BACE,uBAAOC,KAAK,WAAWC,QAASZ,EAAKa,UAAWC,SAAU,kBAAMJ,EAAaV,QAE7E,6BACDA,EAAKe,UAEJ,6BACF,wBAAQC,QAAS,kBAAMP,EAAWT,IAAlC,qBC6DWiB,G,MApEH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,EACGlC,SACAG,MAAK,SAAAgC,GACJL,EAASK,QAEZ,IAEH,IAmBMhB,EAAa,SAACT,GAClBC,QAAQC,IAAI,aAAcF,GACtB0B,OAAOC,QAAP,gCAAwC3B,EAAKe,QAA7C,OACFS,EAAYlB,OAAON,GACPP,KAAK2B,EAASD,EAAMS,QAAO,SAAAC,GAAC,OAAIA,EAAEzB,KAAOJ,EAAKI,QAC9C0B,OAAM,SAAAC,GAAUL,OAAOM,MAAP,oBACFhC,EAAKe,QADH,8CAM1BkB,EAAmB,SAAAjC,GACvB,IAAMkC,EAAW,2BAAQlC,GAAR,IAAc,WAAcA,EAAKa,YAClDZ,QAAQC,IAAI,cAAegC,GAC3BV,EAAYzB,OAAOmC,GACPzC,KAAK2B,EAASD,EAAMgB,KAAI,SAAAnC,GAAI,OAAIA,EAAKI,KAAO8B,EAAY9B,GAAKJ,EAAOkC,QAIhF,OACE,oCACA,uCACE,uBAAME,SAzCI,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjBxB,QAASM,EACTR,WAAW,GAGbW,EACG5B,OAAO2C,GACP9C,MAAK,SAAA+C,GACJpB,EAASD,EAAMsB,OAAOD,IACtBlB,EAAW,QA8BX,UACF,uBACAoB,MAAOrB,EACPP,SA7BqB,SAACuB,GACxBf,EAAWe,EAAEM,OAAOD,UA6BlB,wBAAQ/B,KAAK,SAAb,qBAEA,gCACE,gCACHQ,EAAMgB,KAAI,SAAAnC,GAAI,OAAI,cAAC,EAAD,CAAsBA,KAAMA,EAAMS,WAAYA,EAAYC,aAAcuB,GAA3DjC,EAAKI,gBC/DzCwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f4c5f5b5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/todos'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(response => response.data)\n}\n\nconst create = newObject => {\n  const req = axios.post(baseUrl, newObject)\n  return req.then(response => response.data)\n}\n\nconst change = (todo) => {\n  console.log('change before baseurl')\n  return axios.put(`${baseUrl}/${todo.id}`,todo)\n              .then(res => {\n                console.log('change promise returned'\n                )\n                return res.data})\n}\n\nconst remove = (todo) => {\n  return axios.delete(`${baseUrl}/${todo.id}`, todo)\n              .then(res => {\n                console.log(res)\n              }\n              )\n}\nconst exports = {getAll, create, change, remove}\n\nexport default exports\n","import React from 'react'\n\nconst Todo = ({todo,removeTodo, toggleChange}) => {\n  return (\n    <tr>\n    <td>\n      <input type=\"checkbox\" checked={todo.completed} onChange={() => toggleChange(todo)}/>\n    </td>\n      <td>\n    {todo.content}\n    </td>\n      <td>\n    <button onClick={() => removeTodo(todo)}>x</button>\n    </td>\n    </tr>\n  )\n}\n\nexport default Todo\n","import React, { useState, useEffect } from 'react'\nimport todoService from './services/todos'\nimport Todo from './components/Todo'\nimport './index.css'\n\nconst App = () => {\n  const [todos, setTodos] = useState([])\n  const [newTodo, setNewTodo] = useState('')\n\n  useEffect(() => {\n    todoService\n      .getAll()\n      .then(initialTodos => {\n        setTodos(initialTodos)\n      })\n  }, [])\n\n  const addTodo = (e) => {\n    e.preventDefault()\n    const todoObject = {\n      content: newTodo,\n      completed: false,\n    }\n\n    todoService\n      .create(todoObject)\n      .then(returnedTodo => {\n        setTodos(todos.concat(returnedTodo))\n        setNewTodo('')\n    })\n  }\n\n  const handleTodoChange = (e) => {\n    setNewTodo(e.target.value)\n  }\n\n  const removeTodo = (todo) => {\n    console.log('removetodo', todo)\n    if (window.confirm(`Do you want to remove ${todo.content}?`)) {\n      todoService.remove(todo)\n                 .then(setTodos(todos.filter(t => t.id !== todo.id)))\n                 .catch(error => {window.alert(\n                   `The todo \"${todo.content} was already removed from the server\"`\n                 )})\n    }\n  }\n\n  const toggleCompletion = todo => {\n    const changedTodo = { ...todo, \"completed\": !todo.completed}\n    console.log('changedTodo', changedTodo)\n    todoService.change(changedTodo)\n               .then(setTodos(todos.map(todo => todo.id !== changedTodo.id ? todo : changedTodo))\n               )\n  }\n\n    return (\n      <section>\n      <h1>Todos</h1>\n        <form onSubmit={addTodo}>\n      <input\n      value={newTodo}\n      onChange={handleTodoChange}/>\n      <button type=\"submit\">save</button>\n    </form>\n      <table>\n        <tbody>\n    {todos.map(todo => <Todo key = {todo.id} todo={todo} removeTodo={removeTodo} toggleChange={toggleCompletion}/> )}\n</tbody>\n      </table>\n      </section>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}